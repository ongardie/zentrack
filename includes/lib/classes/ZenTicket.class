<? /* -*- Mode: C; c-basic-indent: 3; indent-tabs-mode: nil -*- ex: set tabstop=3 expandtab: */ 

/** @package zen */

class ZenTicket extends Zen {

  /**
   * CONSTRUCTOR
   *
   * loads a blank ticket object, or loads a ticket by id
   * 
   * @param integer $ticket_id (optional)id of ticket to load
   */
  function zenTicket( $ticket_id = 0 ) { }

  /**
   * copies an existing ticket to this one
   *
   * Note that it is NOT considered the same ticket... running
   * save() will create a new ticket in the db.
   *
   * @param integer $ticket_id to be copied to this object
   * @return boolean copy succeeded
   */
  function copy( $ticket_id = 0 ) { }
   
  /**
   * Save the ticket in its current state
   * to the database
   *
   * If this ticket meets isValid() request, then it is updated
   * Otherwise, a new ticket is inserted into the database
   *
   * @return integer ticket's id if successful or false
   */
  function save() { }
  
   /**
   * returns the notify object associated with this ticket
   *
   * @return NotifyObject the NotifyObject associated with this ticket
   */
  function getNotify() { }
  
  /**
   * Perform next action in flowpath
   * 
   * Validates the ticket's status based on flowpath
   * requirements and attempts to execute next action
   */
  function next() { }

  /**
   * Gets a ticket parameter
   *
   * @param string $field is the field to retrieve a value for
   * @return mixed the value of the parameter/field requested
   */
  function getField( $field ) { }
  
  /**
   * Set a ticket parameter
   *
   * The ticket parameter will be validated, and then
   * stored.  Save() must be called to commit changes to db 
   *
   * @param string $field is the field name to update
   * @param mixed $value is the value to use
   * @return boolean succeeded
   */
  function setField( $field, $value ) { }

  /* VARIABLES */
  
  /** @var integer $_id the ticket's id */
  var $_id;
  
  /** @var array $_fields the ticket's fields from db */
  var $_fields;
  
}

?>
