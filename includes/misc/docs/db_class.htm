<html>
<head>
<title>Reflection Test</title>
<LINK REL=StyleSheet HREF="stylesheet.css" TYPE="text/css">
</head>              
<body bgcolor='#FFFFFF' text='#000000' link='#000066' vlink='#006666'>

     &nbsp;<P>
     <b><font size=4 color="#000099">www/db.class</font></b>
     </p>
     <P>
     <a href='#details'>Details</a>&nbsp;|&nbsp;<a href='#functions'>Functions</a>&nbsp;
 
     
                                               
       </p><P>&nbsp;<a name='details'></a>
       <P>
       <hr align=left width=400 color='teal'>
       <b>Page Details</b>
       <hr align=left width=400 color='teal'>
       <ul>
       <P><i>

  zenTrack Class
  <br>  Author: Kato "phpzen"
  <br>  Description: Wrapper for database functions
  <br>  Version: See CVS Repository for version information
  <br>  Created: 02/02/21
  <br>  Email:  postmaster@phpzen.net
  <br>  URL: http:<br>www.phpzen.net
  <br>
  <br>  This class contains all of the useful functions to be used
	<br>  for retrieving data from the db.  Currently it uses
	<br>  ADODB as an ODBC driver.
	
</i>
 
      </ul>
          	
	    <hr align=left width=400 color='teal'>
	    <b>Functions:</b>
	    <hr align=left width=400 color='teal'>
	    <ul>
	    <table bgcolor='#EEEEEE' width=600><tr><td class="titleCell">Name</td><td class='titleCell'>Parameters</td><td class='titleCell'>Line</td><td class='titleCell'>Comments</td></tr>
<tr><td colspan=4 class='subTitle'>B</td></tr>
<tr bgcolor='#FFFFFF'>
<td class='nameCell' valign=top>build_search_clause</td><td class='valueCell' valign=top>
params<br>andor = &quot;AND&quot;</td><td class='lineCell' valign=top>267</td><td class='commentCell' valign=top>This function accepts a complex array containing the following format:
<br>&quot;index_name&quot; =&gt; array( field_name, condition, value[, flag] )
<br>where:
<br>index_name is a reference for this search parameter (must be unique, can be [])
<br>the index name is used primarily after search completion to check if search
<br>was performed using a certain field (for displaying results)
<br>field_name is the column name in the database
<br>condition is one of the following:
<br>=        !=
<br>contains !contains
<br>like     !like
<br>&gt;        &lt;
<br>&gt;=       &lt;=
<br>in
<br>value is the value to be matched against
<br>value is the value to be matched against
<br>or a comma seperated list of values in
<br>the case that the condition is &quot;in&quot;
<br>flag is an optional parameter which, if set
<br>to 1, would make the match case sensetive
<br>optionally, any of the sets of data in the incoming
<br>params clause could also be an array of data sets with
<br>an and/or modifier to start them (modifier must be in all caps)
<br>EXAMPLE USAGE:
<br>$colorSet           = array();
<br>$colorSet[&quot;index2&quot;] = array(&quot;field2&quot;, &quot;like&quot;, &quot;red%&quot;);  <br> begins with red
<br>$colorSet[&quot;index3&quot;] = array(&quot;field3&quot;, &quot;&gt;&quot;, &quot;2&quot; );       <br> greater than 2
<br>$dataSet             = array();
<br>$dataSet[&quot;index&quot;1&quot;]  = array(&quot;field1&quot;, &quot;=&quot;,&quot;apples&quot;,1);    <br>case sensitive
<br>$dataSet[&quot;index2_3&quot;] = array(&quot;OR&quot;, $colorSet );
<br>$dataSet[&quot;index4&quot;]   = array(&quot;field4&quot;, &quot;in&quot;,&quot;Fall,Autumn,Winter&quot;);
</td>
</tr>
<tr><td colspan=4 class='subTitle'>C</td></tr>
<tr bgcolor='#DFDFDF'>
<td class='nameCell' valign=top>checkSlashes</td><td class='valueCell' valign=top>
val = ''</td><td class='lineCell' valign=top>158</td><td class='commentCell' valign=top>checks incoming data for proper escaped ' marks
<br>to insure insertion integrity
</td>
</tr>
<tr bgcolor='#FFFFFF'>
<td class='nameCell' valign=top>complexWhere</td><td class='valueCell' valign=top>
params</td><td class='lineCell' valign=top>232</td><td class='commentCell' valign=top>takes an indexed array as a list of columns and
<br>an array containing the operator and value of each
<br>to match and makes them into an sql
<br>format ready for use in a WHERE statement
<br>the format is [&quot;column_name&quot;] = array(&quot;operator&quot;,&quot;value&quot;)
<br>where operator is a comparitor like =,&gt;,&gt;=,LIKE,etc
</td>
</tr>
<tr><td colspan=4 class='subTitle'>D</td></tr>
<tr bgcolor='#DFDFDF'>
<td class='nameCell' valign=top>DB</td><td class='valueCell' valign=top>
host = ''<br>user = ''<br>passphrase = ''<br>database = ''</td><td class='lineCell' valign=top>383</td><td class='commentCell' valign=top>INVOKE
</td>
</tr>
<tr bgcolor='#FFFFFF'>
<td class='nameCell' valign=top>db_connect</td><td class='valueCell' valign=top>
host = ''<br>user = ''<br>passphrase = ''<br>database = ''</td><td class='lineCell' valign=top>366</td><td class='commentCell' valign=top>
      <br> create a db connection
      <br> see configVars.php for details on how to
      <br> configure the db connection
</td>
</tr>
<tr bgcolor='#DFDFDF'>
<td class='nameCell' valign=top>db_get</td><td class='valueCell' valign=top>
query</td><td class='lineCell' valign=top>68</td><td class='commentCell' valign=top>returns a single value from a db query
</td>
</tr>
<tr bgcolor='#FFFFFF'>
<td class='nameCell' valign=top>db_get_fields</td><td class='valueCell' valign=top>
table<br>flag = 0</td><td class='lineCell' valign=top>246</td><td class='commentCell' valign=top>returns the names of the columns
<br>in $table of the current database
<br>if $flag is set, returns the ADODB meta object
<br>containing all parameters for the fields
<br>(see ADODB method MetaColumns() for more info)
<br>otherwise, just an array of names
</td>
</tr>
<tr bgcolor='#DFDFDF'>
<td class='nameCell' valign=top>db_insert</td><td class='valueCell' valign=top>
table<br>params<br>sequence = ''</td><td class='lineCell' valign=top>78</td><td class='commentCell' valign=top>performs an insert statement
<br>if $sequence is not given, then it will default as follows:
<br>[table]_id_seq
<br>where ZENTRACK_TICKETS would result in:
<br>tickets_id_seq
<br>all sequence ids should be named accordingly
<br>requires abstraction because
<br>returning the insert_id varies
<br>in method from db to db
<br>for instance:  in oracle or postgres
<br>it is easiest to SELECT nextval() the
<br>sequence/trigger/etc and then insert
<br>the query with that value attached
<br>so that the insertID can then be returned
<br>.. in mysql, there is no SELECT nextval()
<br>so it is easieast to run the query, then return
<br>the mysql function mysql_insert_id()
</td>
</tr>
<tr bgcolor='#FFFFFF'>
<td class='nameCell' valign=top>db_insertID</td><td class='valueCell' valign=top>
sequence = ''</td><td class='lineCell' valign=top>149</td><td class='commentCell' valign=top>If using mysql, this should be called after the insert, and will return the insert ID just created... otherwise, it is called before the insert and returns the next available ID, while reserving it for the subsequent insert statement.
</td>
</tr>
<tr bgcolor='#DFDFDF'>
<td class='nameCell' valign=top>db_list</td><td class='valueCell' valign=top>
query</td><td class='lineCell' valign=top>127</td><td class='commentCell' valign=top>retrieves a single column from the db
<br>and returns the results in a simple list array
<br>array
</td>
</tr>
<tr bgcolor='#FFFFFF'>
<td class='nameCell' valign=top>db_query</td><td class='valueCell' valign=top>
query</td><td class='lineCell' valign=top>30</td><td class='commentCell' valign=top>returns an array of results
<br>from $query, one array per row of data
</td>
</tr>
<tr bgcolor='#DFDFDF'>
<td class='nameCell' valign=top>db_queryIndexed</td><td class='valueCell' valign=top>
query</td><td class='lineCell' valign=top>15</td><td class='commentCell' valign=top>returns an indexed array of results, on array per row of data, indexed by the column names.
</td>
</tr>
<tr bgcolor='#FFFFFF'>
<td class='nameCell' valign=top>db_quick</td><td class='valueCell' valign=top>
query</td><td class='lineCell' valign=top>55</td><td class='commentCell' valign=top>returns a row (1 row only) of
<br>results from $query
</td>
</tr>
<tr bgcolor='#DFDFDF'>
<td class='nameCell' valign=top>db_quickIndexed</td><td class='valueCell' valign=top>
query</td><td class='lineCell' valign=top>42</td><td class='commentCell' valign=top>returns an indexed row (1 row only)
<br>from $query
</td>
</tr>
<tr bgcolor='#FFFFFF'>
<td class='nameCell' valign=top>db_result</td><td class='valueCell' valign=top>
query</td><td class='lineCell' valign=top>119</td><td class='commentCell' valign=top>performs an insert, update, delete
<br>or other query which does not retrieve
<br>data
</td>
</tr>
<tr><td colspan=4 class='subTitle'>M</td></tr>
<tr bgcolor='#DFDFDF'>
<td class='nameCell' valign=top>makeInsertVals</td><td class='valueCell' valign=top>
params<br>set = 0</td><td class='lineCell' valign=top>172</td><td class='commentCell' valign=top>takes an indexed array of parameters and creates a list of columns
<br>and values to insert into the database
<br>is sensitive to things like NULL and numbers
<br>if $set is 1, then this method will return an update formatted list
<br>rather than two insert formatted lists
</td>
</tr>
<tr><td colspan=4 class='subTitle'>R</td></tr>
<tr bgcolor='#FFFFFF'>
<td class='nameCell' valign=top>recursiveSearchClause</td><td class='valueCell' valign=top>
params<br>andor</td><td class='lineCell' valign=top>308</td><td class='commentCell' valign=top>INTERNAL USE ONLY
<br>see the build_search_clause() method for more details
<br>recursively prepare a search clause
</td>
</tr>
<tr><td colspan=4 class='subTitle'>S</td></tr>
<tr bgcolor='#DFDFDF'>
<td class='nameCell' valign=top>simpleWhere</td><td class='valueCell' valign=top>
params</td><td class='lineCell' valign=top>201</td><td class='commentCell' valign=top>takes an indexed array as a list of columns and
<br>their values to match and makes them into an sql
<br>format ready for use in a WHERE statement
</td>
</tr>
<tr bgcolor='#FFFFFF'>
<td class='nameCell' valign=top>switchQueryMode</td><td class='valueCell' valign=top>
mode = 1</td><td class='lineCell' valign=top>257</td><td class='commentCell' valign=top>
      <br> switches the return array method
      <br> 1 - associative array
      <br> 0 - non-associative array
      <br> mode is associative by default
</td>
</tr>
</table>
	    </ul>
	    <P><a href='#top'>top</a>&nbsp;<a name='vars'></a>
	    
	    
</body>
</html>